name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
        
    - name: Generate Prisma client
      run: npx prisma generate
        
    - name: Run linting
      run: npm run lint:check
        
    - name: Run formatting check
      run: npm run format:check
        
    - name: Run unit tests
      run: npm run test
        
    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      with:
        file: backend/coverage/lcov.info
        flags: backend
        name: backend-coverage

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
        
    - name: Run linting
      run: npm run lint
        
    - name: Run type checking
      run: npm run type-check
        
    - name: Run unit tests
      run: npm run test
        
    - name: Run e2e tests
      run: npm run test:e2e
        
    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      with:
        file: frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        
    - name: Backend security audit
      run: |
        cd backend
        npm ci
        npm audit --audit-level=moderate
        
    - name: Frontend security audit
      run: |
        cd frontend
        npm ci
        npm audit --audit-level=moderate
        
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
        working-directory: backend
      continue-on-error: true

  build:
    name: Build Applications
    runs-on: ubuntu-latest
    needs: [backend, frontend, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        
    - name: Build Backend
      run: |
        cd backend
        npm ci
        npx prisma generate
        npm run build
        
    - name: Build Frontend
      run: |
        cd frontend
        npm ci
        npm run build
        
    - name: Upload Backend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: backend/dist/
        retention-days: 7
        
    - name: Upload Frontend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/dist/
        retention-days: 7 